{
    "collab_server" : "",
    "contents" : "---\ntitle: \"R Code / Numerical Summaries\"\noutput: \n  html_document: \n    theme: cerulean\n---\n\n<div style=\"text-align:right;\">[Back to Table of Contents](../../TextbookTOC.html)</div>\n\n<hr />\n\n### Mean {#mean}\n\n<div style=\"padding-left:15px;\">\n**Console** Help Command: `?mean()`\n\n`mean(object)`\n\n* `object` must be a \"numeric\" vector.\n\n | [Textbook](../Describing Data/NumericalSummaries.html#mean) |  \n\n\n**Example Code**\n\n```{r, eval=FALSE, comment=NA}\nView(CO2)\nmean(CO2$uptake)\nwith(CO2, mean(uptake))\n\n## Using mosaic\nlibrary(mosaic)\nView(CO2)\nmean(uptake ~ Type, data=CO2)\n```\n\n</div>\n<br />\n<hr />\n\n\n### Median {#median}\n\n<div style=\"padding-left:15px;\">\n**Console** Help Command: `?median()`\n\n`median(object)`\n\n* `object` must be a \"numeric\" vector.\n\n | [Textbook](../Describing Data/NumericalSummaries.html#median) | \n\n**Example Code**\n\n```{r, eval=FALSE, comment=NA}\nView(CO2)\nmedian(CO2$uptake)\nwith(CO2, median(uptake))\n\n## Using mosaic\nlibrary(mosaic)\nView(CO2)\nmedian(uptake ~ Type, data=CO2)\n```\n \n</div>\n<br />\n<hr />\n\n\n### Mode {#mode}\n\n<div style=\"padding-left:15px;\">\n**Console** Help Command: --\n\nThere is no built in way to calculate the mode in R. There is a `mode()` function in R, but it does not do what you think it should. Don't use it unless you understand what it really does. If you really want to find the mode in R, use the `table()` command and sort through the results yourself.\n\n\n | [Textbook](../Describing Data/NumericalSummaries.html#mode) | \n\n**Example Code**\n\n```{r, eval=FALSE, comment=NA}\nView(CO2)\ntable(CO2$Type)\ntable(CO2$Plant)\n\nView(cars)\ntable(cars$dist)\n```\n\n</div>\n<br />\n<hr />\n\n\n### Minimum {#min}\n\n<div style=\"padding-left:15px;\">\n**Console** Help Command: `?min()`\n\n`min(object)`\n\n* `object` must be a \"numeric\" vector.\n\n | [Textbook](../Describing Data/NumericalSummaries.html#min) | \n\n**Example Code**\n\n```{r, eval=FALSE, comment=NA}\nView(CO2)\nmin(CO2$uptake)\nwith(CO2, min(uptake))\n\n## Using mosaic\nlibrary(mosaic)\nmin(uptake ~ Type, data=CO2)\n``` \n \n</div>\n<br />\n<hr />\n\n\n### Maximum {#max}\n\n<div style=\"padding-left:15px;\">\n**Console** Help Command: `?max()`\n\n`max(object)`\n\n* `object` must be a \"numeric\" vector.\n\n | [Textbook](../Describing Data/NumericalSummaries.html#max) |\n \n**Example Code**\n\n```{r, eval=FALSE, comment=NA}\nView(CO2)\nmax(CO2$uptake)\nwith(CO2, max(uptake))\n\n## Using mosaic\nlibrary(mosaic)\nmax(uptake ~ Type, data=CO2)\n``` \n\n</div>\n<br />\n<hr />\n\n\n\n### Quartiles (five-number summary) {#quartiles}\n\n<div style=\"padding-left:15px;\">\n**Console** Help Command: `?quantile()`\n\n`quantile(object)`\n\n* `object` must be a \"numeric\" vector.\n* Technically, `summary()` would be more useful than `quantile()` because it provides the five-number summary and the mean. The `quantile()` function just gives the five-number summary. \n\nTo get just the first and third quartiles you can use the quantile function with the `probs` option:\n\n`quantile(object, probs=c(.25,.75))`\n\n* `object` must be a \"numeric\" vector.\n* `probs=c(0,.25,.5,.75,1)` could also be used to get the five-number summary.\n\n\n\n | [Textbook](../Describing Data/NumericalSummaries.html#quartiles) | \n\n**Example Code**\n\n```{r, eval=FALSE, comment=NA}\nView(CO2)\nquantile(CO2$uptake, probs=c(0,.25,.5,.75,1))\nsummary(CO2$uptake)\n```\n\n</div>\n<br />\n<hr />\n\n\n### Standard Deviation {#standarddeviation}\n\n<div style=\"padding-left:15px;\">\n**Console** Help Command: `?sd()`\n\n`sd(object)`\n\n* `object` must be a \"numeric\" vector.\n\n | [Textbook](../Describing Data/NumericalSummaries.html#standarddeviation) | \n\n**Example Code**\n\n```{r, eval=FALSE, comment=NA}\nView(CO2)\nsd(CO2$uptake)\nwith(CO2, sd(uptake))\n\n## Using mosaic\nlibrary(mosaic)\nsd(uptake ~ Type, data=CO2)\n```\n\n</div>\n<br />\n<hr />\n\n\n### Variance {#variance}\n\n<div style=\"padding-left:15px;\">\n**Console** Help Command: `?var()`\n\n`var(object)`\n\n* `object` must be a \"numeric\" vector.\n\n | [Textbook](../Describing Data/NumericalSummaries.html#variance) | \n\n**Example Code**\n\n```{r, eval=FALSE, comment=NA}\nView(CO2)\nvar(CO2$uptake)\nwith(CO2, var(uptake))\n\n## Using mosaic\nlibrary(mosaic)\nvar(uptake ~ Type, data=CO2)\n```\n\n</div>\n<br />\n<hr />\n\n\n### Range {#range}\n\n<div style=\"padding-left:15px;\">\n**Console** Help Command: `?range()`\n\n`my.range <- range(object)`\n\n`diff(my.range)`\n\n* `object` must be a \"numeric\" vector.\n\n* `my.range` could be any legal R object name you want to create.\n\n* `range()` technically only returns the min and max of the data. Thus the command `diff(my.range)` has to be used to obtain the range.\n\n | [Textbook](../Describing Data/NumericalSummaries.html#range) | \n\n**Example Code**\n\n```{r, eval=FALSE, comment=NA}\nView(CO2)\nrange(CO2$uptake)\nmy.range <- range(CO2$uptake)\ndiff(my.range)\n```\n\n</div>\n<br />\n<hr />\n\n\n### Percentile {#percentile}\n\n<div style=\"padding-left:15px;\">\n**Console** Help Command: `?quantile()`\n\n`quantile(object, prob=percentile)`\n\n* `object` must be a \"numeric\" vector.\n* `percentile` must be a numeric value between 0 and 1, inclusive. If you wanted the 70th percentile... `prob=.7`.\n\nNote that this actually gives the quantile, or data value, corresponding to a certain percentile. If you truly want the percentile of a given data value, use\n\n`ecdf(object)(value)`\n\n* `object` must be a \"numeric\" vector.\n* `value` is a number that occurs in your data.\n\n | [Textbook](../Describing Data/NumericalSummaries.html#percentile) | \n\n**Example Code**\n\n```{r, eval=FALSE, comment=NA}\nquantile(CO2$uptake, prob=.7)\necdf(CO2$uptake)(35.03)\n```\n\n</div>\n<br />\n<hr />\n\n\n### Proportion {#proportion}\n\n<div style=\"padding-left:15px;\">\n**Console** Help Command: -\n\n`x/n`\n\n* `x` and `n` must be numeric values, like `x <- 4` and `n <- 10`.\n\n | [Textbook](../Describing Data/NumericalSummaries.html#proportion) | \n\n**Example Code**\n\n```{r, eval=FALSE, comment=NA}\nx <- 4\nn <- 10\nx/n\n4/10\n```\n\n</div>\n<br />\n<hr />\n\n\n### Correlation {#correlation}\n\n<div style=\"padding-left:15px;\">\n**Console** Help Command: `?cor()`\n\n`cor(object1,object2)`\n\n* `object1` and `object2` must be \"numeric\" vectors of the same length.\n\n`cor(object)`\n\n* `object` must contain at least two columns of \"numeric\" vectors of the same length.\n\n | [Textbook](../Describing Data/NumericalSummaries.html#correlation) | \n\n**Example Code**\n\n```{r, eval=FALSE, comment=NA}\nView(CO2)\ncor(CO2$uptake, CO2$conc)\nwith(CO2, cor(uptake, conc))\n```\n \n</div>\n<br />\n<hr />\n<br />\n",
    "created" : 1473571362245.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1841310555",
    "id" : "E11D6D5B",
    "lastKnownWriteTime" : 1473572361,
    "last_content_update" : 1473572361850,
    "path" : "C:/Users/Administrator/Desktop/Math 325 Notebook/Textbook/R Code/RNumericalSummaries.Rmd",
    "project_path" : "Textbook/R Code/RNumericalSummaries.Rmd",
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}